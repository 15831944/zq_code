#include<iostream>


void main()
{
	//地址与[](下标运算符)
	//假设有X类型的地址p,则p[n]表示
	//从p开始的第n个X类型的变量([]中的
	//n从0开始)
	std::cout<<"123abc"[4]<<std::endl;

	short a[5] = {1,2,3,4,5};

	short* p = a;

	p[0] = p[1] + p[2];//5 2 3 4 5

	short* q = &p[2];

	q[0] = q[1] + q[2];//5 2 9 4 5 

	q[0] = q[-1] + q[-2];//5 2 7 4 5

	//地址与*(解引用运算符)
	//假设有X类型的地址p,*p表示p地址
	//上的那个X类型的变量
	*a = *p + *q;//12 2 7 4 5
	*(&q[1]) = 11;//12 2 7 11 5

	//*(&p[1]) = 11;//12 11 7 11 5
	std::cout<<*"xyz"<<std::endl;

	std::cout<<*(&("xyz"[1]))<<std::endl;
	
	//地址与整数的加减法
	//假设有X类型的地址p,则p + n的结果也是
	//一个X类型的地址，相对于p偏移了sizeof(X类型)
	//*n个字节

	short* r = a + 3;

	r[1] = 13;//12 2 7 11 13

	(a + 2)[-1] = 14;//12 14 7 11 13

	*(a + 3) = 15;//12 14 7 15 13

	(a + (a[3] - *(&a[2] + 2)))[-1] = 16;
	//12 16 7 15 13
	std::cout<<"abcdef" + 3<<std::endl;

	std::cout<<&(("abcdef" + 3)[-2])<<std::endl;
	
	//地址与地址的减法
	//两个地址要能够相减，这两个地址必须类型相同
	//假设有X类型的地址p1,p2,则p1 - p2的结果是一个
	//整数，其大小为(p1的字节编号 - p2的字节编号)/
	//sizeof(X)

	std::cout<<q - a<<std::endl;

	std::cout<<q - &a[6]<<std::endl;

	system("pause");
}