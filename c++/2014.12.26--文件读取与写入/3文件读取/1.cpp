#include<iostream>


void main()
{
	char a;//61
	short b;//01 00
	int c;//02 00 00 00
	double d;//9a 99 99 99 99 99 23 40


	//FILE是一个文件结构体,pf是一个文件结构体指针,
	//它代表了要打开的文件
	FILE* pf = 0;

	//按照指定的路径，打开方式打开一个文件，本质上是
	//建立硬盘上面文件和程序中的文件结构指针之间的联系,
	//一旦建立了这个联系，则我们就可以通过操作这个文件指针
	//来操作硬盘上的文件
	//1)文件结构体指针的地址
	//2)要打开的文件的路径
	//3)打开的方式
	//rb(read binary)表示打开一个文件按照二进制形式进行读取
	//(就是按照字节进行读取)
	//  a)如果没有指定的文件，文件结构指针会被设置为0
	//  b)如果有指定的文件，文件结构指针会被设置为非0."rb"不会清空文件
	fopen_s(&pf,"存储1.txt","rb");
	
	if(!pf)
	{
		std::cout<<"无法打开指定文件,";
		system("pause");
		return;
	}
	
	//从文件中读取数据到内存中
	//01)用于接收来自文件的数据的内存首地址
	//02)要读取的内存的块的大小(按字节算)
	//03)要读取的内存的块的数量(参数2 * 参数3是要读取的总字节数)
	//04)代表某个文件的文件结构体指针
	fread(&a,1,sizeof(char),pf);
	fread(&b,1,sizeof(short),pf);
	fread(&c,4,1,pf);
	fread(&d,2,4,pf);

	std::cout<<a<<" "<<b<<" "<<c<<" "<<d<<std::endl;

	//当我们不使用这个文件时一定要关闭文件，
	//本质是断开文件结构指针和硬盘上文件的联系
	//代表某个文件的文件结构指针
	fclose(pf);
	system("pause");
}