#include <iostream>
#include "2.h"

//extern有两个用处
//1)全局变量的声明
//2)用于告知C++某些由C语言编译出来的函数

void main()
{
	//cpp文件中发现了f函数的声明，它理所当然地
	//认为在工程中有一个?f@@YAXXZ函数要去链接，
	//而真正的工程中的f函数是C编译器编译出来的
	//所以它的名字是_f而不是?f@@YAXXZ，所以链接
	//的时候找不到这个f函数，就链接报错了
	f();
	system("pause");
}

//无论是C还是C++，在编译代码的时候，都会对函数名称
//进行再命名，命名的规则是不一样的

//C语言不支持函数重载，一般来说它的再命名规则很简单
//往往就是把函数的名字前面加_，比如f函数会被命名为_f

//C++语言支持函数重载，所以它在为函数进行再命名的时
//候，会在名字里面体现函数的返回值和形式参数表，比如
//一个int a(int,int)函数，可能会被命名为_int_a_int_int
//这样的话，其实就可以对重载的函数进行区分了

