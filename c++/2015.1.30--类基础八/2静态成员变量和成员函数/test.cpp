#include <iostream>

#include "1.h"



class ABC
{
public:
	int a;
	//static 
	//用法3：修饰类中的成员变量
	//1)被修饰的成员变量被放在静态内存区。其本质
	//就是一个全局变量，在进入入口点函数之前分配
	//在退出入口点函数后释放内存
	//2)默认初始化全部字节为0x00
	//3)静态成员变量必须在源文件中被显式定义出来
	//  当然也可以初始化
	//4)静态成员变量其实和类对象没有什么关系，所以
	//  除了用类对象.访问也可以直接用类名::访问
	//5)静态成员变量不算入类的大小
	//6)如果静态成员变量设置为public，那么和一个全局变量
	//没有任何区别,如果用private，那么相当于这个类使用的
	//全局变量

	static int a1;//静态成员变量的声明

	void f()
	{
		a = 1;
		a1 = 2;
	}

	//用法4：修饰成员函数
	//1）被修饰的成员函数没有隐藏的this指针.
	//2) 静态成员函数只能访问静态成员变量,静态成员
	//   函数.
	//3) 同静态成员变量一样，可以直接用类名::访问
	static void f1()
	{
		//f();
		//a = 2;
		//error C2597: 对非静态成员“ABC::a”的非法引用
		a1 = 4;
	}

	void f2()
	{
		f1();
	}

	static void f3()
	{
		f1();
	}
};


int ABC::a1;

void main()
{
	ABC::a1 = 1111;

	A::x = 222;

	ABC::f1();
	system("pause");
}
