//new (std::nothrow) XXX;

#include <iostream>

//在通常的程序中，对于出现异常情况一般都用返回值告知
//调用者，也就是说早期的错误检查和处理主要是用返回值
//来处理的，但是通过返回值来进行的处理可以存在一些问
//题，程序代码中到处充斥着这种返回值检查，难以阅读，
//各个检查的方式和错误处理的手段又不同一，整体缺乏对
//程序错误的统一管理，为了方便地对程序中出现的错误情
//况进行有效管理，c99开始C++支持了异常处理，简单地说
//异常提供了一种在指定位置统一处理错误的办法，C++中的
//异常通过关键字throw、try、catch来处理

void f()
{
	std::cout<<"f开始"<<std::endl;

	//此处抛出一个类型为int，数值为1的异常
	throw 1;

	std::cout<<"f结束"<<std::endl;
}

void main()
{
	//对于一个程序来说，无论在任何地方抛出
	//一个异常，如果这个异常最终（入口点函
	//数）都没有被捕获，那么系统会调用exit
	//来强制退出程序
	f();

	system("pause");
}