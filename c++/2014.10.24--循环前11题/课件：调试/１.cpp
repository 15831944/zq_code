#include<iostream>

void main()
{
	int a;
	a = 1;//01 00 00 00 0x0012FF60
	if(a == 1)
	{
		int  b;
		b = 1;//0x0012FF54
	}
	std::cout<<"1"<<std::endl;
	std::cout<<"2"<<std::endl;
	std::cout<<"3"<<std::endl;
	std::cout<<"4"<<std::endl;
	std::cout<<"5"<<std::endl;
	std::cout<<"6"<<std::endl;
	system("pause");
}

//断点设置;F9
//启动调试：F5
//逐过程执行F10
//逐语句执行F11
//黄色箭头表示还没有执行即将执行的一句代码，只要出现了
//黄色的箭头，就可以通过调试-窗口-内存来查看内存
//要查看变量在内存中的情况，那么必须是程序在该变量的作用域中
//停下来病出现黄色箭头，然后在内存查看窗口的[地址]中写上
//&变量名，然后回车，此时最左上角的字节内就是这个变量的字节内容了

//断点F9
//断点主要配合F5[启动调试]命令来执行，如果是启动调试
//开始执行程序的话，在程序的执行过程中，一旦遇到断点，
//程序就会停下了,此时，可以通过多种方式查看变量，内存等信息
//要再次继续程序的执行，则需要再次按下F5[启动调试]往后执行
//,直到后面再次遇到断点就又停下来

//逐过程单步(F10)
//按一下F10就执行一个过程
//断点和逐过程单步往往配合使用
//如果我们只想在程序某个地方单步执行，那么只
//需要在那个地方打上断点，然后F5先执行到那个地方停
//下来，在按F10单步执行
//如果在单步执行时想让程序继续执行下去而不在单步执行的话
//可以按F5[启动调试]让程序继续往下执行