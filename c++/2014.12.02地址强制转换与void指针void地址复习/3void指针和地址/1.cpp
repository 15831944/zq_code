#include<iostream>

//void指针，void地址

void main()
{
	//void关键字
	//01)修饰函数表明不返回任何值
	//02)定义void指针

	//地址具有以下两个特性
	//01)地址有具体的字节编号
	//02)地址是有类型区分

	//假设a的地址是0x11223344
	char a[8];

	a + 2;//0x11223346上的char地址

	&a[3];//0x11223347上的char地址
	
	(int*)a + 1;//0x11223348上的int地址

	(float*)((short*)a + 1);//0x11223346上的float地址
	
	//void指针存储的地址只有一个特性
	//地址的具体的字节编号
	//即void指针存储的地址没有类型可言，这样的话void类型的
	//指针就有以下特性
	//01)任何地址都可以赋值或者初始化给void类型指针
	void* p1 = a;//p1存储的是0x11223344

	p1 = main;//p1存储的是main函数指令区的地址
	
	//假设b的地址为0x11223352
	short b;

	p1 = &b;//p1存储的是0x11223352

	//02)前面讲到的4种地址的运算，void类型的地址都不能参与
	void* p2 = a;
	
	//p2[0];//error C2036: “void *”: 未知的大小
	//*p1;// error C2100: 非法的间接寻址
	//p1 + 2;//error C2036: “void *”: 未知的大小
	//p1 - p2;// error C2036: “void *”: 未知的大小
	
	//03)void指针一般是经过强制转换后再使用
	//我们往往强制转换void类型地址再使用

	*((char*)p1) = 'x';

	//int* q = p1;//p1没有类型。不能赋值给int类型

	int* q = (int*)p1;//(int*)p1就是int地址

	char* q1 = (char*)p1;
	system("pause");
}