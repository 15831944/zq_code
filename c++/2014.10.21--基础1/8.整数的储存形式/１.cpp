#include <iostream>

//整数在内存中的存储方式
//在计算机中，整数是按照补码的方式进行存储的
//正整数的补码就是其二进制形式
//0的补码就是0
//负整数的补码就是其绝对值的二进制按位取反(0变1 1变0)
//后加1

//X86体系的cpu的数据的存储方式
//01)Little Endian :大于1字节的数字先存储低位部分
//后存储高位部分
//02)Big Endian:大于1字节的数字先存储高位，在存储低位

//AMD Intel 生产的cpu都是Little Endian


void main()
{
	int a = 12345;
	//00000000 00000000 00110000 00111001
	//00 00 30 39
	//Little Endian：
	//39 30 00 00

	//0
	//00000000 00000000 00000000 00000000
	//00 00 00 00
	
	a = -a;
	//-12345;
	//得到其绝对值的二进制
	//00000000 00000000 00110000 00111001
	//将其按位取反
	//11111111 11111111 11001111 11000110
	//加1
	//11111111 11111111 11001111 11000111
	//转换为十六进制
	//ff ff cf c7
	//按照Little Endian
	//c7 cf ff ff
	//按Bit Endian
	//f ff cf c7

	system("pause");
}